#!/usr/bin/env ruby
# frozen_string_literal: true

require "bundler/setup"
require "yarv"
require "prism"

implemented = YARV::Compiler.public_instance_methods.grep(/^visit_/).map { |name| name.name.delete_prefix("visit_").to_sym }
unimplemented = []

ObjectSpace.each_object(Prism::Node.singleton_class) do |cls|
  next if cls == Prism::Node

  type = cls.type
  unimplemented << type unless implemented.include?(type)
end

puts "%3d unimplemented nodes" % unimplemented.size
puts "======================="
puts unimplemented.sort
