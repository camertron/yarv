#!/usr/bin/env ruby
# frozen_string_literal: true

require "bundler/setup"
require "yarv"

source = ARGV[0] == "-e" ? ARGV[1] : File.read(ARGV[0])
options = YARV::Options.new(
  frozen_string_literal: false,
  inline_const_cache: false,
  operands_unification: false,
  peephole_optimization: false,
  specialized_instruction: false,
  tailcall_optimization: false
)

prism = YARV.compile_prism(source, options)
ruby = RubyVM::InstructionSequence.compile(source, **options)

puts "=== YARV.compile_prism(source).disasm"
puts prism.disasm
puts
puts "=== RubyVM::InstructionSequence.compile(source).disasm"
puts ruby.disasm

prism_insns = prism.insns
ruby_insns = YARV::InstructionSequence.from(ruby.to_a, options).insns
ruby_insns.select! { |insn| !insn.is_a?(Integer) && insn != :RUBY_EVENT_LINE }

prism_insns.zip(ruby_insns).each do |(prism_insn, ruby_insn)|
  if prism_insn != ruby_insn
    puts
    puts "expected: #{prism_insn.inspect}"
    puts "actual: #{ruby_insn.inspect}"
    break
  end
end
